{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/1_lexicon/upsales/client/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\n\n// Interface for a transaction\n\n// Interface for form data for creating a transaction\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// The main component for the Home page\nconst Home = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [currentBalance, setCurrentBalance] = useState(0);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/transactions');\n        const data = await response.json();\n        setTransactions(data.transactions || []);\n        setCurrentBalance(data.transactions.reduce((acc, transaction) => transaction.type === 'deposit' ? acc + transaction.amount : acc - transaction.amount, 0));\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const addTransaction = async transactionData => {\n    try {\n      const response = await fetch('api/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(transactionData)\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const newTransaction = await response.json();\n      setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n      setCurrentBalance(prevBalance => newTransaction.type === 'deposit' ? prevBalance + newTransaction.amount : prevBalance - newTransaction.amount);\n    } catch (error) {\n      console.error('Error submitting transaction:', error);\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Home container mt-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(TransactionForm, {\n          onSubmit: addTransaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: /*#__PURE__*/_jsxDEV(TransactionList, {\n          transactions: transactions,\n          currentBalance: currentBalance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"6M/Fh6hy8HORkkK64BoSMueXwak=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","TransactionForm","TransactionList","jsxDEV","_jsxDEV","Home","_s","transactions","setTransactions","loading","setLoading","currentBalance","setCurrentBalance","fetchData","response","fetch","data","json","reduce","acc","transaction","type","amount","error","console","addTransaction","transactionData","method","headers","body","JSON","stringify","ok","Error","status","newTransaction","prevTransactions","prevBalance","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","_c","$RefreshReg$"],"sources":["/home/alina/Desktop/1_lexicon/upsales/client/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\n\n// Interface for a transaction\ninterface Transaction {\n  id: string;\n  account: string;\n  amount: number;\n  type: \"deposit\" | \"withdrawal\";\n  created_at: string;\n}\n\n// Interface for form data for creating a transaction\ninterface TransactionFormData {\n  account_id: string;\n  amount: number;\n}\n\n// The main component for the Home page\nconst Home = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentBalance, setCurrentBalance] = useState(0);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('/transactions');\n        const data = await response.json();\n        setTransactions(data.transactions || []);\n        setCurrentBalance(data.transactions.reduce((acc: number, transaction: Transaction) => (\n          transaction.type === 'deposit' ? acc + transaction.amount : acc - transaction.amount\n        ), 0));\n      } catch (error) {\n        console.error('Error fetching transactions:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const addTransaction = async (transactionData: TransactionFormData) => {\n    try {\n      const response = await fetch('api/transactions', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(transactionData),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const newTransaction: Transaction = await response.json();\n\n      setTransactions(prevTransactions => [...prevTransactions, newTransaction]);\n      setCurrentBalance(prevBalance =>\n        newTransaction.type === 'deposit' ? prevBalance + newTransaction.amount : prevBalance - newTransaction.amount\n      );\n    } catch (error) {\n      console.error('Error submitting transaction:', error);\n    }\n  };\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"Home container mt-5\">\n      <div className='row'>\n        <div className='col'>\n          <TransactionForm onSubmit={addTransaction} />\n        </div>\n        <div className='col'>\n          <TransactionList transactions={transactions} currentBalance={currentBalance} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}