{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!accountId || !amount) {\n      console.error('All fields are required');\n      return;\n    }\n\n    // Call the onSubmit prop function provided from the parent component\n    onSubmit({\n      account_id: accountId,\n      amount: parseInt(amount, 10) // Make sure to parse the amount to an integer\n    });\n\n    // Optionally, reset the form fields\n    setAccountId('');\n    setAmount('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"accountId\",\n        children: \"Account ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"accountId\",\n        value: accountId,\n        onChange: e => setAccountId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"/61FJHXYkiUNVBBOXgtCu74oImQ=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionForm","onSubmit","_s","accountId","setAccountId","amount","setAmount","handleSubmit","e","preventDefault","console","error","account_id","parseInt","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\n\ninterface TransactionFormProps {\n  onSubmit: (transaction: { account_id: string; amount: number }) => void;\n}\nconst TransactionForm: React.FC<TransactionFormProps> = ({ onSubmit }) => {\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!accountId || !amount) {\n      console.error('All fields are required');\n      return;\n    }\n\n    // Call the onSubmit prop function provided from the parent component\n    onSubmit({\n      account_id: accountId,\n      amount: parseInt(amount, 10), // Make sure to parse the amount to an integer\n    });\n\n    // Optionally, reset the form fields\n    setAccountId('');\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"accountId\">Account ID</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"accountId\"\n          value={accountId}\n          onChange={(e) => setAccountId(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"amount\">Amount</label>\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit Transaction\n      </button>\n    </form>\n  );\n};\n\nexport default TransactionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACN,SAAS,IAAI,CAACE,MAAM,EAAE;MACzBK,OAAO,CAACC,KAAK,CAAC,yBAAyB,CAAC;MACxC;IACF;;IAEA;IACAV,QAAQ,CAAC;MACPW,UAAU,EAAET,SAAS;MACrBE,MAAM,EAAEQ,QAAQ,CAACR,MAAM,EAAE,EAAE,CAAC,CAAE;IAChC,CAAC,CAAC;;IAEF;IACAD,YAAY,CAAC,EAAE,CAAC;IAChBE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACEP,OAAA;IAAME,QAAQ,EAAEM,YAAa;IAAAO,QAAA,gBAC3Bf,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBf,OAAA;QAAOiB,OAAO,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CrB,OAAA;QACEsB,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,EAAE,EAAC,WAAW;QACdC,KAAK,EAAEpB,SAAU;QACjBqB,QAAQ,EAAGhB,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC9CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAKgB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBf,OAAA;QAAOiB,OAAO,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCrB,OAAA;QACEsB,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,cAAc;QACxBO,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAElB,MAAO;QACdmB,QAAQ,EAAGhB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACiB,MAAM,CAACF,KAAK,CAAE;QAC3CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNrB,OAAA;MAAQsB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAElD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAClB,EAAA,CApDIF,eAA+C;AAAA2B,EAAA,GAA/C3B,eAA+C;AAsDrD,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}