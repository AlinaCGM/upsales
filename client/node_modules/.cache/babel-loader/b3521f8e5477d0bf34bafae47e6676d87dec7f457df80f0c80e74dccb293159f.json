{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionForm.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionForm = ({\n  onSubmit\n}) => {\n  _s();\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const parsedAmount = parseInt(amount, 10);\n    if (!accountId || isNaN(parsedAmount)) {\n      console.error('All fields are required and amount must be a number');\n      return;\n    }\n    onSubmit(e); // This line triggers the form submission\n\n    setAccountId('');\n    setAmount('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"accountId\",\n        children: \"Account ID\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        id: \"accountId\",\n        value: accountId,\n        onChange: e => setAccountId(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"amount\",\n        children: \"Amount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        className: \"form-control\",\n        id: \"amount\",\n        value: amount,\n        onChange: e => setAmount(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"btn btn-primary\",\n      children: \"Submit Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"/61FJHXYkiUNVBBOXgtCu74oImQ=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TransactionForm","onSubmit","_s","accountId","setAccountId","amount","setAmount","handleSubmit","e","preventDefault","parsedAmount","parseInt","isNaN","console","error","children","className","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","type","id","value","onChange","target","required","_c","$RefreshReg$"],"sources":["/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionForm.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\ntype TransactionFormProps = {\n  onSubmit: (event: React.FormEvent) => void;\n};\n\nconst TransactionForm: React.FC<TransactionFormProps> = ({ onSubmit }) => {\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState('');\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const parsedAmount = parseInt(amount, 10);\n    if (!accountId || isNaN(parsedAmount)) {\n      console.error('All fields are required and amount must be a number');\n      return;\n    }\n    \n    onSubmit(e); // This line triggers the form submission\n\n    setAccountId('');\n    setAmount('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-group\">\n        <label htmlFor=\"accountId\">Account ID</label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"accountId\"\n          value={accountId}\n          onChange={(e) => setAccountId(e.target.value)}\n          required\n        />\n      </div>\n      <div className=\"form-group\">\n        <label htmlFor=\"amount\">Amount</label>\n        <input\n          type=\"number\"\n          className=\"form-control\"\n          id=\"amount\"\n          value={amount}\n          onChange={(e) => setAmount(e.target.value)}\n          required\n        />\n      </div>\n      <button type=\"submit\" className=\"btn btn-primary\">\n        Submit Transaction\n      </button>\n    </form>\n  );\n};\n\nexport default TransactionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMxC,MAAMC,eAA+C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,CAAmC,IAAK;IAClEA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,YAAY,GAAGC,QAAQ,CAACN,MAAM,EAAE,EAAE,CAAC;IACzC,IAAI,CAACF,SAAS,IAAIS,KAAK,CAACF,YAAY,CAAC,EAAE;MACrCG,OAAO,CAACC,KAAK,CAAC,qDAAqD,CAAC;MACpE;IACF;IAEAb,QAAQ,CAACO,CAAC,CAAC,CAAC,CAAC;;IAEbJ,YAAY,CAAC,EAAE,CAAC;IAChBE,SAAS,CAAC,EAAE,CAAC;EACf,CAAC;EAED,oBACEP,OAAA;IAAME,QAAQ,EAAEM,YAAa;IAAAQ,QAAA,gBAC3BhB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBhB,OAAA;QAAOkB,OAAO,EAAC,WAAW;QAAAF,QAAA,EAAC;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7CtB,OAAA;QACEuB,IAAI,EAAC,MAAM;QACXN,SAAS,EAAC,cAAc;QACxBO,EAAE,EAAC,WAAW;QACdC,KAAK,EAAErB,SAAU;QACjBsB,QAAQ,EAAGjB,CAAC,IAAKJ,YAAY,CAACI,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC9CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAKiB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBhB,OAAA;QAAOkB,OAAO,EAAC,QAAQ;QAAAF,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACtCtB,OAAA;QACEuB,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,cAAc;QACxBO,EAAE,EAAC,QAAQ;QACXC,KAAK,EAAEnB,MAAO;QACdoB,QAAQ,EAAGjB,CAAC,IAAKF,SAAS,CAACE,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE;QAC3CG,QAAQ;MAAA;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNtB,OAAA;MAAQuB,IAAI,EAAC,QAAQ;MAACN,SAAS,EAAC,iBAAiB;MAAAD,QAAA,EAAC;IAElD;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAACnB,EAAA,CAhDIF,eAA+C;AAAA4B,EAAA,GAA/C5B,eAA+C;AAkDrD,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}