{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/1_lexicon/upsales/client/src/pages/Home.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport TransactionList from '../components/TransactionList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// The main component for the Home page\nconst Home = () => {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [accountId, setAccountId] = useState('');\n  const [amount, setAmount] = useState(0);\n  const [balance, setBalance] = useState(0);\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/transactions');\n      if (response.ok) {\n        const data = await response.json();\n        setTransactions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/balance');\n      if (response.ok) {\n        const data = await response.json();\n        setBalance(data.balance);\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n  const submitTransaction = async event => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          account_id: accountId,\n          amount: amount.toString()\n        }) // Convert amount to string\n      });\n\n      if (response.ok) {\n        fetchTransactions();\n        fetchBalance();\n      } else {\n        const errorText = await response.text();\n        console.error('Transaction submission failed');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n    fetchBalance();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 12\n    }, this);\n  }\n  return (\n    /*#__PURE__*/\n    // <div className=\"Home container mt-5\">\n    //   <div className='row'>\n    //     <div className='col'>\n    //       <TransactionForm onSubmit={addTransaction} />\n    //     </div>\n    //     <div className='col'>\n    //       <TransactionList transactions={transactions} currentBalance={currentBalance} />\n    //     </div>\n    //   </div>\n    // </div>\n    _jsxDEV(\"div\", {\n      className: \"Home container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: submitTransaction,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Account ID\",\n              value: accountId,\n              onChange: e => setAccountId(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Amount\",\n              value: amount,\n              onChange: e => setAmount(parseFloat(e.target.value))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Transaction List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(TransactionList, {\n            transactions: transactions,\n            balance: balance\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }, this)\n  );\n};\n_s(Home, \"TZ+cC/89Nzzat+00hAD68uqYO3Q=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","TransactionList","jsxDEV","_jsxDEV","Home","_s","transactions","setTransactions","loading","setLoading","accountId","setAccountId","amount","setAmount","balance","setBalance","fetchTransactions","response","fetch","ok","data","json","error","console","fetchBalance","submitTransaction","event","preventDefault","method","headers","body","JSON","stringify","account_id","toString","errorText","text","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","placeholder","value","onChange","e","target","parseFloat","_c","$RefreshReg$"],"sources":["/home/alina/Desktop/1_lexicon/upsales/client/src/pages/Home.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport TransactionForm from '../components/TransactionForm';\nimport TransactionList from '../components/TransactionList';\n\ninterface Transaction {\n    transaction_id: string;\n    account_id: string;\n    amount: number;\n    created_at: string;\n  }\n\n// The main component for the Home page\nconst Home = () => {\n  const [transactions, setTransactions] = useState<Transaction[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [accountId, setAccountId] = useState<string>('');\n  const [amount, setAmount] = useState<number>(0);\n  const [balance, setBalance] = useState<number>(0);\n\n  const fetchTransactions = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/transactions');\n      if (response.ok) {\n        const data = await response.json();\n        setTransactions(data);\n      }\n    } catch (error) {\n      console.error('Error fetching transactions:', error);\n    }\n  };\n\n  const fetchBalance = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/balance');\n      if (response.ok) {\n        const data = await response.json();\n        setBalance(data.balance);\n      }\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n    }\n  };\n\n  const submitTransaction = async (event: React.FormEvent) => {\n    event.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/transaction', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ account_id: accountId, amount: amount.toString() }), // Convert amount to string\n      });\n  \n      if (response.ok) {\n        fetchTransactions();\n        fetchBalance();\n      } else {\n        const errorText = await response.text();\n        console.error('Transaction submission failed');\n      }\n    } catch (error) {\n      console.error('An error occurred:', error);\n    }\n  };\n  useEffect(() => {\n    fetchTransactions();\n    fetchBalance();\n  }, []);\n\n\n  if (loading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    // <div className=\"Home container mt-5\">\n    //   <div className='row'>\n    //     <div className='col'>\n    //       <TransactionForm onSubmit={addTransaction} />\n    //     </div>\n    //     <div className='col'>\n    //       <TransactionList transactions={transactions} currentBalance={currentBalance} />\n    //     </div>\n    //   </div>\n    // </div>\n    <div className=\"Home container mt-5\">\n    <div className=\"row\">\n      <div className=\"col\">\n        <form onSubmit={submitTransaction}>\n          <input\n            type=\"text\"\n            placeholder=\"Account ID\"\n            value={accountId}\n            onChange={(e) => setAccountId(e.target.value)}\n          />\n          <input\n            type=\"number\"\n            placeholder=\"Amount\"\n            value={amount}\n            onChange={(e) => setAmount(parseFloat(e.target.value))}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n      <div className=\"col\">\n        <h2>Transaction List</h2>\n        <TransactionList transactions={transactions} balance={balance} />\n      </div>\n    </div>\n  </div>\n  );\n};\n\nexport default Home;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}