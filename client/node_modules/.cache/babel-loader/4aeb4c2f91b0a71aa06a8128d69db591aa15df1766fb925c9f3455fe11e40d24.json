{"ast":null,"code":"var _jsxFileName = \"/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionList.tsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TransactionList = ({\n  transactions,\n  balance\n}) => {\n  const formatDate = isoDate => {\n    const date = new Date(isoDate);\n    // Format the date as desired, for example: YYYY-MM-DD HH:MM:SS\n    return `${date.getFullYear()}-${(date.getMonth() + 1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-light \",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Transaction History\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"border border-secondary mb-1 py-5 list-unstyled\",\n        children: [\"Transfered $ \", transaction.amount, \" (Account: \", transaction.account_id, \")\", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date of transaction \", formatDate(transaction.created_at)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, transaction.transaction_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [\"Current Balance: \", balance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_c = TransactionList;\nexport default TransactionList;\nvar _c;\n$RefreshReg$(_c, \"TransactionList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TransactionList","transactions","balance","formatDate","isoDate","date","Date","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","getSeconds","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","transaction","amount","account_id","created_at","transaction_id","_c","$RefreshReg$"],"sources":["/home/alina/Desktop/1_lexicon/upsales/client/src/components/TransactionList.tsx"],"sourcesContent":["import React from 'react';\n\ntype TransactionListProps = {\n  transactions: {\n    transaction_id: string;\n    account_id: string;\n    amount: number;\n    created_at: string;\n  }[];\n  balance: number;\n};\n\nconst TransactionList: React.FC<TransactionListProps> = ({ transactions, balance }) => {\n  const formatDate = (isoDate: string) => {\n    const date = new Date(isoDate);\n    // Format the date as desired, for example: YYYY-MM-DD HH:MM:SS\n    return `${date.getFullYear()}-${(date.getMonth() + 1)\n      .toString()\n      .padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')} ${date.getHours()}:${date.getMinutes()}:${date.getSeconds()}`;\n  };\n\n  return (\n    <div className='bg-light '>\n      <h2>Transaction History</h2>\n      <ul>\n        {transactions.map((transaction) => (\n          <li className='border border-secondary mb-1 py-5 list-unstyled' key={transaction.transaction_id}>\n            Transfered $ {transaction.amount} (Account: {transaction.account_id}) \n            <p>Date of transaction {formatDate(transaction.created_at)}</p>\n          </li>\n        ))}\n      </ul>\n      <h3>Current Balance: {balance}</h3>\n    </div>\n  );\n};\n\nexport default TransactionList;\n\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAY1B,MAAMC,eAA+C,GAAGA,CAAC;EAAEC,YAAY;EAAEC;AAAQ,CAAC,KAAK;EACrF,MAAMC,UAAU,GAAIC,OAAe,IAAK;IACtC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IAC9B;IACA,OAAQ,GAAEC,IAAI,CAACE,WAAW,CAAC,CAAE,IAAG,CAACF,IAAI,CAACG,QAAQ,CAAC,CAAC,GAAG,CAAC,EACjDC,QAAQ,CAAC,CAAC,CACVC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,IAAI,CAACM,OAAO,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAE,IAAGL,IAAI,CAACO,QAAQ,CAAC,CAAE,IAAGP,IAAI,CAACQ,UAAU,CAAC,CAAE,IAAGR,IAAI,CAACS,UAAU,CAAC,CAAE,EAAC;EAClI,CAAC;EAED,oBACEf,OAAA;IAAKgB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBjB,OAAA;MAAAiB,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BrB,OAAA;MAAAiB,QAAA,EACGf,YAAY,CAACoB,GAAG,CAAEC,WAAW,iBAC5BvB,OAAA;QAAIgB,SAAS,EAAC,iDAAiD;QAAAC,QAAA,GAAkC,eAClF,EAACM,WAAW,CAACC,MAAM,EAAC,aAAW,EAACD,WAAW,CAACE,UAAU,EAAC,GACpE,eAAAzB,OAAA;UAAAiB,QAAA,GAAG,sBAAoB,EAACb,UAAU,CAACmB,WAAW,CAACG,UAAU,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFIE,WAAW,CAACI,cAAc;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAG3F,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,eACLrB,OAAA;MAAAiB,QAAA,GAAI,mBAAiB,EAACd,OAAO;IAAA;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEV,CAAC;AAACO,EAAA,GAvBI3B,eAA+C;AAyBrD,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}